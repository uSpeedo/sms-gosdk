//Code is generated by um code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate um-gen-go-api USMS SendUSMSMessage

package usms

import (
	"github.com/usms-sdk-go/um/request"
	"github.com/usms-sdk-go/um/response"
)

// SendUSMSMessageRequest is request schema for SendUSMSMessage action
type SendUSMSMessageRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"false"`

	// [公共参数] 可用区。参见 [可用区列表](../summary/regionlist.html)
	// Zone *string `required:"false"`

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"false"`

	// 电话号码数组，电话号码格式为(60)1xxxxxxxx，()中为国际长途区号(如中国为86或0086，两种格式都支持)，后面为电话号码.若不传入国际区号，如1851623xxxx，则默认为国内手机号
	PhoneNumbers []string `required:"true"`

	// 模板参数数组，以TempalteParams.0，TempalteParams.1.。。格式。若模板ID指定的模板无可变参数，则不传入该参数。模板参数个数与模板不匹配，则不允许发送
	TemplateParams []string `required:"true"`

	// 模板ID。若指定的模板ID审核未通过(status不等于2)则不允许发送
	TemplateId *string `required:"true"`

	// 使用的签名，如果不输入则使用默认签名，若没有申请默认签名不允许发送；若输入的签名没有申请，则无法发送
	SigContent *string `required:"false"`
}

// SendUSMSMessageResponse is response schema for SendUSMSMessage action
type SendUSMSMessageResponse struct {
	response.CommonBase

	// 发生错误时表示错误描述
	Message string

	// 本次提交发送的短信的唯一ID，可根据该值查询本次发送的短信列表
	SessionNo string
}

// NewSendUSMSMessageRequest will create request of SendUSMSMessage action.
func (c *USMSClient) NewSendUSMSMessageRequest() *SendUSMSMessageRequest {
	req := &SendUSMSMessageRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// SendUSMSMessage - 发送短信息。短信字数超过70个后，按照每66个进行切割(因为要加上1/3), 2/3)等字样，占用4个字长)。短信最大长度不能超过600个字。每个汉字、数字、字母、字符都按一个字计
func (c *USMSClient) SendUSMSMessage(req *SendUSMSMessageRequest) (*SendUSMSMessageResponse, error) {
	var err error
	var res SendUSMSMessageResponse

	err = c.Client.InvokeAction("SendUSMSMessage", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
